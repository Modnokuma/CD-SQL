-- Ejercicio 1
SELECT * FROM MOVIES 

-- Ejercicio 2
SELECT * FROM GENRES 

-- Ejercicio 3
SELECT * FROM STUDIOS WHERE STUDIO_ACTIVE = TRUE

-- Ejercicio 4
SELECT * FROM MEMBERS ORDER BY MEMBER_DISCHARGE_DATE DESC LIMIT 20

-- Ejercicio 5
SELECT COUNT(*) AS REPETICIONES, MOVIE_DURATION  FROM MOVIES GROUP BY MOVIE_DURATION ORDER BY REPETICIONES DESC  LIMIT 20

-- Ejercicio 6 o YEAR()
SELECT * FROM MOVIES WHERE MOVIE_LAUNCH_DATE >= '2000-01-01' AND MOVIE_NAME LIKE 'A%'

-- Ejercicio 7
SELECT * FROM ACTORS WHERE MONTH (ACTOR_BIRTH_DATE) = 6 

-- Ejercicio 8
SELECT * FROM ACTORS WHERE MONTH (ACTOR_BIRTH_DATE) != 6 AND ACTOR_DEAD_DATE IS NULL 

-- Ejercicio 9 Se puede usar TODAY() para la fecha de hoy
SELECT DIRECTOR_NAME, DATEDIFF(YEAR,DIRECTOR_BIRTH_DATE,SYSDATE) AS EDAD FROM directors WHERE  DATEDIFF(YEAR,DIRECTOR_BIRTH_DATE,SYSDATE)<= 50 AND DIRECTOR_DEAD_DATE IS NULL

-- Ejercicio 10
SELECT ACTOR_NAME , DATEDIFF(YEAR,ACTOR_BIRTH_DATE ,SYSDATE) AS EDAD FROM ACTORS  WHERE  DATEDIFF(YEAR,ACTOR_BIRTH_DATE,SYSDATE)<= 50 AND ACTOR_DEAD_DATE IS NOT NULL

-- Ejercicio 11
SELECT DIRECTOR_NAME FROM directors WHERE  DATEDIFF(YEAR,DIRECTOR_BIRTH_DATE,SYSDATE)<= 40 AND DIRECTOR_DEAD_DATE IS NULL

-- Ejercicio 12
SELECT AVG(EDAD) AS EDAD_MEDIA FROM (SELECT DATEDIFF(YEAR,DIRECTOR_BIRTH_DATE,SYSDATE) AS EDAD FROM directors WHERE DIRECTOR_DEAD_DATE IS NULL)
SELECT AVG(DATEDIFF(YEAR, DIRECTOR_BIRTH_DATE,SYSDATE)) AS EDAD_MEDIA FROM DIRECTORS WHERE DIRECTOR_DEAD_DATE IS NULL

-- Ejercicio 13
SELECT AVG(EDAD) AS EDAD_MEDIA FROM (SELECT DATEDIFF(YEAR,ACTOR_BIRTH_DATE,SYSDATE) AS EDAD FROM ACTORS WHERE ACTOR_DEAD_DATE IS NOT NULL)
SELECT AVG(DATEDIFF(YEAR, ACTOR_BIRTH_DATE,SYSDATE)) AS EDAD_MEDIA FROM ACTORS WHERE ACTOR_DEAD_DATE IS NOT NULL

-- Ejercicio 14
SELECT  M.MOVIE_NAME, D.STUDIO_NAME  FROM MOVIES M INNER JOIN STUDIOS D ON M.DIRECTOR_ID = D.STUDIO_ID  

-- Ejercicio 15
SELECT  DISTINCT (MEMBER_NAME)  FROM MEMBERS_MOVIE_RENTAL M INNER JOIN MEMBERS MEM ON M.MEMBER_ID =MEM.MEMBER_ID WHERE YEAR(M.MEMBER_RENTAL_DATE) BETWEEN 2010 AND 2015

-- Ejercico 16
SELECT  COUNT(M.MOVIE_ID) AS NUMERO_PELICULAS, N.NATIONALITY_NAME  FROM MOVIES M INNER JOIN NATIONALITIES N ON M.NATIONALITY_ID = N.NATIONALITY_ID GROUP BY N.NATIONALITY_NAME

-- Ejercicio 17
SELECT m.MOVIE_NAME  FROM MOVIES M INNER JOIN GENRES G ON M.GENRE_ID = G.GENRE_ID WHERE G.GENRE_NAME = 'Documentary'

-- Ejercicio 18
SELECT M.MOVIE_NAME  FROM MOVIES M INNER JOIN DIRECTORS D ON M.DIRECTOR_ID = D.DIRECTOR_ID WHERE YEAR(D.DIRECTOR_BIRTH_DATE) >= 1980 AND D.DIRECTOR_DEAD_DATE IS NULL

-- Ejercicio 19 x
SELECT M.MEMBER_NAME, D.DIRECTOR_NAME , M.MEMBER_TOWN  FROM MEMBERS M INNER JOIN DIRECTORS D ON M.MEMBER_TOWN = D.DIRECTOR_BIRTH_PLACE 

-- Ejercicio 20
SELECT MOVIE_NAME, YEAR(MOVIE_LAUNCH_DATE) AS AÃ‘O  FROM MOVIES M INNER JOIN STUDIOS S ON M.STUDIO_ID = S.STUDIO_ID  WHERE S.STUDIO_ACTIVE = FALSE

-- Ejercicio 21
SELECT M.* FROM MEMBERS_MOVIE_RENTAL MEM INNER JOIN MOVIES M ON  MEM.MOVIE_ID = M.MOVIE_ID ORDER BY MEM.MEMBER_RENTAL_DATE DESC LIMIT 10

-- Ejercicio 22
SELECT D.DIRECTOR_NAME, COUNT(M.MOVIE_NAME) AS NUM_MOVIES  FROM DIRECTORS D INNER JOIN MOVIES M ON D.DIRECTOR_ID = M.DIRECTOR_ID WHERE DATEDIFF(YEAR,D.DIRECTOR_BIRTH_DATE, M.MOVIE_LAUNCH_DATE) <=41 GROUP BY D.DIRECTOR_ID 

-- Ejercicio 23
SELECT D.DIRECTOR_NAME, AVG(M.MOVIE_DURATION) AS AVG_DURATION FROM DIRECTORS D INNER JOIN MOVIES M ON D.DIRECTOR_ID = M.DIRECTOR_ID GROUP BY D.DIRECTOR_ID 

-- Ejercicio 24
SELECT MOV.MOVIE_NAME, MOV.MOVIE_DURATION  FROM MOVIES MOV WHERE MOV.MOVIE_DURATION = (SELECT  MIN(M.MOVIE_DURATION) FROM MEMBERS_MOVIE_RENTAL MEM INNER JOIN MOVIES M ON M.MOVIE_ID = MEM.MOVIE_ID  WHERE DATEDIFF(YEAR, MEMBER_RENTAL_DATE, SYSDATE) <= 6 )


SELECT  M.MOVIE_NAME , M.MOVIE_DURATION FROM MEMBERS_MOVIE_RENTAL MEM INNER JOIN MOVIES M ON M.MOVIE_ID = MEM.MOVIE_ID  WHERE DATEDIFF(YEAR, MEMBER_RENTAL_DATE, SYSDATE) <= 6 ORDER BY m.MOVIE_DURATION LIMIT 1

-- Ejercicio 25
SELECT COUNT(*) AS NUM_MOVIES, D.DIRECTOR_NAME FROM DIRECTORS D INNER JOIN MOVIES M ON D.DIRECTOR_ID = M.MOVIE_ID WHERE M.MOVIE_NAME LIKE '%The%' AND YEAR(M.MOVIE_LAUNCH_DATE) BETWEEN 1960 AND 1989 GROUP BY D.DIRECTOR_NAME 

-- Ejercicio 26
SELECT
	M.MOVIE_NAME,
	N.NATIONALITY_NAME ,
	D.DIRECTOR_NAME
FROM
	MOVIES M
INNER JOIN DIRECTORS D ON
	M.MOVIE_ID = D.DIRECTOR_ID
INNER JOIN NATIONALITIES N ON
	 N.NATIONALITY_ID = M.NATIONALITY_ID 

-- Ejercicio 27
SELECT
	M.MOVIE_NAME ,
	A.ACTOR_NAME
FROM
	MOVIES M
INNER JOIN MOVIES_ACTORS MA ON
	M.MOVIE_ID = MA.MOVIE_ID
INNER JOIN ACTORS A ON
	MA.ACTOR_ID = A.ACTOR_ID 

-- Ejercicio 28
SELECT
	M.MOVIE_NAME,
	COUNT(*)AS ALQUILERES
FROM
	MEMBERS_MOVIE_RENTAL MEM
INNER JOIN MOVIES M ON
	MEM.MOVIE_ID = M.MOVIE_ID
GROUP BY
	M.MOVIE_NAME 

SELECT
	D.DIRECTOR_NAME, COUNT(*) AS ALQUILER 
FROM
	MEMBERS_MOVIE_RENTAL MEM
INNER JOIN MOVIES M ON
	MEM.MOVIE_ID = M.MOVIE_ID
INNER JOIN DIRECTORS D ON
	M.DIRECTOR_ID = D.DIRECTOR_ID 
GROUP BY
	D.DIRECTOR_NAME
ORDER BY ALQUILER DESC LIMIT 1

-- Ejercicio 29 
SELECT
	S.STUDIO_NAME, sum(A.AWARD_WIN) 
FROM
	AWARDS A
INNER JOIN MOVIES M ON
	A.MOVIE_ID = M.MOVIE_ID
INNER JOIN STUDIOS S ON
	M.STUDIO_ID = S.STUDIO_ID
GROUP BY
	S.STUDIO_NAME
ORDER BY S.STUDIO_NAME 

-- Ejercicio 30*
SELECT
	SUM(AW.AWARD_ALMOST_WIN), A.ACTOR_NAME  
FROM
	AWARDS AW
INNER JOIN MOVIES_ACTORS MA ON
	AW.MOVIE_ID = MA.MOVIE_ID
INNER JOIN MOVIES M ON
	MA.MOVIE_ID = M.MOVIE_ID 
INNER JOIN ACTORS A ON
	MA.ACTOR_ID = A.ACTOR_ID 
GROUP BY  A.ACTOR_NAME


SELECT
	SUM(AW.AWARD_ALMOST_WIN), A.ACTOR_NAME  
FROM
	MOVIES M
INNER JOIN AWARDS AW ON
	AW.MOVIE_ID = M.MOVIE_ID
INNER JOIN MOVIES_ACTORS MA ON
	M.MOVIE_ID = MA.MOVIE_ID
INNER JOIN ACTORS A ON
	MA.ACTOR_ID = A.ACTOR_ID 
GROUP BY  A.ACTOR_NAME  

-- Ejercicio 31*
SELECT
	 COUNT(DISTINCT MA.ACTOR_ID) AS NUM_ACTORS,
	 COUNT(DISTINCT M.DIRECTOR_ID) AS NUM_DIRECTORS
FROM
	STUDIOS S
INNER JOIN MOVIES M ON
	M.STUDIO_ID = S.STUDIO_ID
INNER JOIN MOVIES_ACTORS MA ON
	M.MOVIE_ID = MA.MOVIE_ID
WHERE
	S.STUDIO_ACTIVE = FALSE

-- Ejercicio 32* NO SE LA VERDAD, NO ENTIENDO MUY BIEN LA TABLA AWARDS
SELECT
	DISTINCT  MEM.MEMBER_NAME,
	MEM.MEMBER_TOWN,
	MEM.MEMBER_PHONE
FROM
	MEMBERS MEM
INNER JOIN MEMBERS_MOVIE_RENTAL MMR ON
	MEM.MEMBER_ID = MMR.MEMBER_ID
INNER JOIN MOVIES M ON
	M.MOVIE_ID = MMR.MOVIE_ID
INNER JOIN AWARDS A ON
	A.MOVIE_ID = M.MOVIE_ID
WHERE
	MMR.MOVIE_ID IN(
	SELECT
		MOVIE_ID
	FROM
		AWARDS
	GROUP BY
		MOVIE_ID
	HAVING
		SUM(AWARD_NOMINATION) >150
			AND SUM(AWARD_WIN) <50
	) 

SELECT
	DISTINCT M.MEMBER_NAME,
	M.MEMBER_TOWN,
	M.MEMBER_PHONE
FROM
	MEMBERS_MOVIE_RENTAL MMR
INNER JOIN MEMBERS M ON
	M.MEMBER_ID = MMR.MEMBER_ID
WHERE
	MMR.MOVIE_ID IN(
	SELECT
		MOVIE_ID
	FROM
		AWARDS
	WHERE
		AWARD_NOMINATION >150
		AND AWARD_WIN <50 ) 
	
-- Ejercicio 33 USAMOS GROUP BY PARA QUE NOO SALGAN REPETICIONES, POR ESO HAY QUE USAR MAX
SELECT D.DIRECTOR_NAME ,MAX(M.MOVIE_LAUNCH_DATE),D.DIRECTOR_DEAD_DATE
FROM DIRECTORS D
INNER JOIN MOVIES M ON M.DIRECTOR_ID = D.DIRECTOR_ID 
WHERE D.DIRECTOR_DEAD_DATE IS NOT NULL AND  D.DIRECTOR_DEAD_DATE < M.MOVIE_LAUNCH_DATE
GROUP BY D.DIRECTOR_NAME, D.DIRECTOR_DEAD_DATE

-- Ejercicio 34  mas menos
UPDATE DIRECTORS D,
SET D.DIRECTOR_DEAD_DATE = DATEADD(yyyy,1,D.DIRECTOR_DEAD_DATE)
WHERE D.DIRECTOR_NAME IN (SELECT D1.DIRECTOR_NAME
FROM DIRECTORS D1
INNER JOIN MOVIES M ON M.DIRECTOR_ID = D1.DIRECTOR_ID 
WHERE D1.DIRECTOR_DEAD_DATE IS NOT NULL AND  D1.DIRECTOR_DEAD_DATE < M.MOVIE_LAUNCH_DATE
GROUP BY D1.DIRECTOR_NAME, D1.DIRECTOR_DEAD_DATE)
		
-- Ejercicio 35
SELECT D.DIRECTOR_NAME 
FROM DIRECTORS D
WHERE D.DIRECTOR_NAME 

SELECT
	D.DIRECTOR_NAME,G.GENRE_NAME, COUNT(G.GENRE_NAME) AS NUM_PELIS
FROM
	GENRES G
INNER JOIN MOVIES M ON
	M.GENRE_ID = G.GENRE_ID
INNER JOIN DIRECTORS D ON
	D.DIRECTOR_ID = M.DIRECTOR_ID 
GROUP BY D.DIRECTOR_NAME, G.GENRE_NAME 
ORDER BY D.DIRECTOR_NAME 
		
-- Ejercicio 36
...

-- Ejercicio 37
	
	












